const coinPrice=33e-5;class App{constructor(e){this.ee=e,this.bindCustomEvents(),this.bindEvents()}bindEvents(){const t=this;$("#formControlRange").on("change",function(){var e=parseInt($(this).val(),10);t.ee.emit("changed",e)}),$("#inputCoins").on("change",function(){var e=parseInt($(this).val(),10);t.ee.emit("changed",e)}),$("#inputEthereum").on("change",function(){var e=parseFloat($(this).val()),e=parseInt(e/coinPrice,10);t.ee.emit("changed",e)})}bindCustomEvents(){this.ee.on("changed",function(e){var t=e.toString(),e=(coinPrice*e).toString();$("#formControlRange").val(t),$("#inputCoins").val(t),$("#inputEthereum").val(e)})}}class EventEmitter{constructor(){this.events={}}on(e,t){return"object"!=typeof this.events[e]&&(this.events[e]=[]),this.events[e].push(t),()=>this.removeListener(e,t)}removeListener(e,t){"object"==typeof this.events[e]&&-1<(t=this.events[e].indexOf(t))&&this.events[e].splice(t,1)}emit(e,...t){"object"==typeof this.events[e]&&this.events[e].forEach(e=>e.apply(this,t))}once(e,t){const n=this.on(e,(...e)=>{n(),t.apply(this,e)})}}const ee=new EventEmitter;new App(ee);